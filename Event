using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Router
{
    public enum KindOfEvent { Coming, GoingOutOfRouter }; // pojawienie się w strumieniu i wyjście z wiązki
    public class Event                                    // klasa opisujaca pojawiajace sie wydarzenie / 
    {                                                     // mamy 2 typy wydarzen przyjscie i wyjscie paczki z routera
        public double key;          // czas pojawienia sie wydarzenia
        private KindOfEvent kind;
        private int StreamNumber;   // numer strumienia z którego pochodzi wydarzenie

        public Event(KindOfEvent kind, int m_StreamNumber, double time)
        {
            this.key = time;
            StreamNumber = m_StreamNumber;
            this.kind = kind;
        }


        public static Event Coming(int n, double t) { return new Event(KindOfEvent.Coming, n, t); }
        public static Event GoingOutOfRouter(int n, double t) { return new Event(KindOfEvent.GoingOutOfRouter, n, t); }
        public KindOfEvent GetKind() { return kind; }
        public int getStreamNumber() { return StreamNumber; }
        public double getKey() { return key; }
    }
}
